@model IconicsArena.Context.Product
@{
    ViewBag.Title = "AddProducts";
}


<style>

    body {
        background-image: url('../../Images/assets/pexels-alscre-2847648.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        height: 100vh;
    }

    .form-container {
        background-color: rgba(255, 255, 255, 0.8); 

        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out; 

        opacity: 0;
        transform: translateY(20px);
    }

        .form-container.show {
            opacity: 1;
            transform: translateY(0);
        }
</style>


<div class="container d-flex justify-content-center align-items-center h-100">
    <div class="form-container">
        <h2 class="text-center">Add New Product</h2>

        @using (Html.BeginForm("AddProducts", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))

        {

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group mb-3">
                <label for="Name">Product Name</label>

                @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control", placeholder = "Enter product name" })

                @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                <label for="Price">Price</label>

                @Html.TextBoxFor(m => m.Price, new { @class = "form-control", placeholder = "Enter price" })

                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                <label for="Category">Category</label>

                @Html.DropDownListFor(m => m.CategoryId, ViewBag.Categories as SelectList, "--Select Category--", new { @class = "form-control" })

                @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                <label for="Stock">Stock</label>

                @Html.TextBoxFor(m => m.Stock, new { @class = "form-control", placeholder = "Enter stock quantity" })

                @Html.ValidationMessageFor(m => m.Stock, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                <label for="Image">Upload Image</label>
                <input type="file" name="image" class="form-control" />

                @Html.ValidationMessage("image", "", new { @class = "text-danger" })
            </div>

            <div class="d-grid gap-2">
                <input type="submit" value="Add Product" class="btn btn-primary btn-block" />
            </div>

        }
    </div>
</div>

<script>window.onload = function () {

        document.querySelector('.form-container').classList.add('show');

    };</script>